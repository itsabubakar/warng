---
import BaseLayout from "@layout/BaseLayout.astro";
import Icon from "@ui/icons/Icon.astro";
import ContactForm from "@ui/forms/ContactForm.astro";
import type { WithContext, Thing } from "schema-dts";

// Updated contact information
const addressHeading = "Our address:";
const emailHeading = "Contact us by email:";

const contactDetails = {
  addressLine1: "Kaduna, Nigeria",
  addressLine2: "",
  phone: "+234 916 8671 417",
  email: "womenawareofrightsnigeria@gmail.com",
};

// Page title and subtitle
const title = "Contact Us";
const subTitle = "Reach out to Women Aware of Rights Initiative (WAR)";

// SEO metadata
const seo = {
  title: "Contact WAR – Women Aware of Rights Initiative",
  description:
    "Get in touch with WAR for support, collaboration, or inquiries. We're here to help and empower women and girls across Northern Nigeria.",
};

// Schema.org metadata
const schema: WithContext<Thing> = {
  "@context": "https://schema.org",
  "@type": "ContactPage",
  inLanguage: "en-US",
  "@id": Astro.url.href,
  url: Astro.url.href,
  name: "Contact WAR – Women Aware of Rights Initiative",
  description:
    "Contact WAR to learn more about our advocacy work, survivor support, or partnership opportunities.",
  isPartOf: {
    "@type": "WebSite",
    url: `${Astro.site}`,
    name: "WAR Initiative",
    description:
      "Women Aware of Rights Initiative works to protect and empower women and girls in Northern Nigeria through advocacy, education, and rehabilitation.",
  },
};
---

<BaseLayout seo={seo} schema={schema}>
  <div class="mx-auto max-w-[85rem] px-4 pb-28 pt-48 sm:px-6 lg:px-8">
    <div class="mb-10 max-w-3xl lg:mb-14">
      <h2 class="text-balance text-4xl text-slate-800 sm:text-5xl md:text-6xl lg:text-7xl">
        {title}
      </h2>
      <p class="ml-1 mt-1 text-slate-600">{subTitle}</p>
    </div>

    <div class="grid grid-cols-1 gap-x-10 md:grid-cols-2 lg:gap-x-16">
      <div class="mb-10 rounded-xl bg-yellow-200 pb-10 md:order-2 md:mb-0 md:pb-0">
        <ContactForm />
      </div>

      <div class="space-y-14">
        <div class="flex gap-x-5">
          <Icon name="mapPin" />
          <div class="grow">
            <h4 class="font-semibold text-slate-600">{addressHeading}</h4>
            <address class="mt-1 text-sm not-italic text-slate-500">
              {contactDetails.addressLine1}
            </address>
          </div>
        </div>

        <div class="flex gap-x-5">
          <Icon name="email" class="size-6 shrink-0 text-slate-600" />
          <div class="grow">
            <h4 class="font-semibold text-slate-600">{emailHeading}</h4>
            <a
              class="mt-1 text-sm text-slate-500 transition-colors duration-300 hover:text-slate-400 focus:text-slate-400 focus:outline-hidden"
              href={`mailto:${contactDetails.email}`}
            >
              {contactDetails.email}
            </a>
          </div>
        </div>

        <div class="flex gap-x-5">
          <Icon name="mobile" class="size-6 shrink-0 text-slate-600" />
          <div class="grow">
            <h4 class="font-semibold text-slate-600">Call us:</h4>
            <p class="mt-1 text-sm text-slate-500">{contactDetails.phone}</p>
          </div>
        </div>
      </div>
    </div>
  </div>

   <script>
    // Automatically adjusting the height of the textarea
    // based on its content. Triggers when the textarea content changes.
    document.addEventListener("astro:page-load", () => {
      function textareaAutoHeight(
        el: HTMLTextAreaElement,
        offsetTop: number = 0,
      ): void {
        el.style.height = "auto";
        el.style.height = `${el.scrollHeight + offsetTop}px`;
      }

      (() => {
        const textareas: string[] = ["#input-message"];

        textareas.forEach((selector) => {
          const textarea = document.querySelector(
            selector,
          ) as HTMLTextAreaElement;

          if (!textarea) return;

          const overlay = textarea.closest(".hs-overlay");

          if (overlay) {
            const instance = (window as any).HSOverlay.getInstance(
              overlay,
              true,
            );

            if (instance) {
              instance.element.on("open", () =>
                textareaAutoHeight(textarea, 3),
              );
            }
          } else {
            textareaAutoHeight(textarea, 3);
          }

          textarea.addEventListener("input", () => {
            textareaAutoHeight(textarea, 3);
          });
        });
      })();
    });
  </script>
</BaseLayout>
